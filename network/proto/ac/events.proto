syntax = "proto3";
package ac;

message ChatEvent {
	// Players may occupy multiple characters,
	// so specify which character is saying the message.
	uint32 character_id = 1;
	string emote_id = 2;
	string message_text = 3;
	// The timescale should be clamped to reasonable values,
	// e.g. 0.5~4.0. This modifies the speed at which the
	// chat message is performed, along with the associated
	// emote.
	float timescale = 4;
	// Depending on the game, horizontal flipping may not be available
	// as an option to clients; however, it may be controlled
	// by the server programmatically.
	bool horizontal_flip = 5;
}

message LeaveEvent {
	uint32 character_id = 1;
}

message DisconnectEvent {
	enum Cause {
		UNEXPECTED = 0;
		DISCONNECT_BY_USER = 1;
		KICKED = 2;
		BANNED = 3;
	}
	uint32 player_id = 1;
	string leave_message = 2;
}

message JoinEvent {
	uint32 player_id = 1;
	string player_name = 2;
	string character_name = 3;
}

message SetBackgroundEvent {
	string background_name = 1;
	enum Transition {
		NONE = 0;
		FADE_TO_BLACK = 1;
		CROSSFADE = 2;
		FADE_TO_WHITE = 3;
	}
	Transition transition_type = 2;
	float transition_time = 3; // in seconds
}

message SoundPlayEvent {
	string sound_name = 1;
	bool loop = 2;
	uint32 channel = 3;
}

message SoundStopEvent {
	uint32 channel = 1;
	bool fade = 2;
	float fade_time = 3; // in seconds
}

message SoundVolumeEvent {
	uint32 channel = 1;
	bool smooth = 2;
}